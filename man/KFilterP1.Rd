% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{KFilterP1}
\alias{KFilterP1}
\title{Kalman Filter with Lag 1 for State Space Models}
\usage{
KFilterP1(data, Lambda, mu0, Sigma0, beta, chol_psi, chol_theta)
}
\arguments{
\item{data}{Numeric matrix.
\code{time} by \code{k} data matrix.}

\item{Lambda}{Numeric matrix.
Measurement or observation matrix.}

\item{mu0}{Numeric matrix.
Initial state mean vector.}

\item{Sigma0}{Numeric matrix.
Initial state covariance matrix.}

\item{beta}{Numeric matrix.
State transition matrix.}

\item{chol_psi}{Numeric matrix.
Cholesky decomposition of the state error covariance matrix Psi.}

\item{chol_theta}{Numeric matrix.
Cholesky decomposition of the  observation error covariance matrix Theta.}
}
\value{
List of filtered state variables and other Kalman filter results.
}
\description{
Kalman Filter with Lag 1 for State Space Models
}
\details{
The measurement model is given by
\deqn{
    \mathbf{y}_{t}
    =
    \boldsymbol{\nu}
    +
    \boldsymbol{\Lambda}
    \boldsymbol{\eta}_{t}
    +
    \boldsymbol{\varepsilon}_{t}
    \quad
    \mathrm{with}
    \quad
    \boldsymbol{\varepsilon}_{t}
    \sim
    \mathcal{N}
    \left(
    \mathbf{0},
    \boldsymbol{\Theta}
    \right)
  }
where \eqn{\mathbf{y}_{t}}, \eqn{\boldsymbol{\eta}_{t}},
and \eqn{\boldsymbol{\varepsilon}_{t}}
are random variables and \eqn{\boldsymbol{\nu}},
\eqn{\boldsymbol{\Lambda}},
and \eqn{\boldsymbol{\Theta}} are model parameters.
\eqn{\mathbf{y}_{t}} is a vector of observed random variables
at time \eqn{t},
\eqn{\boldsymbol{\eta}_{t}} is a vector of latent random variables
at time \eqn{t},,
and \eqn{\boldsymbol{\varepsilon}_{t}}
is a vector of random measurement errors
at time \eqn{t},
while \eqn{\boldsymbol{\nu}} is a vector of intercept,
\eqn{\boldsymbol{\Lambda}} is a matrix of factor loadings,
and \eqn{\boldsymbol{\Theta}} is the covariance matrix of
\eqn{\boldsymbol{\varepsilon}}.

The dynamic structure is given by
\deqn{
    \boldsymbol{\eta}_{t}
    =
    \boldsymbol{\alpha}
    +
    \boldsymbol{\beta}
    \boldsymbol{\eta}_{t - 1}
    +
    \boldsymbol{\zeta}_{t}
    \quad
    \mathrm{with}
    \quad
    \boldsymbol{\zeta}_{t}
    \sim
    \mathcal{N}
    \left(
    \mathbf{0},
    \boldsymbol{\Psi}
    \right)
  }
where \eqn{\boldsymbol{\eta}_{t}}, \eqn{\boldsymbol{\eta}_{t - 1}},
and \eqn{\boldsymbol{\zeta}_{t}} are random variables
and \eqn{\boldsymbol{\alpha}}, \eqn{\boldsymbol{\beta}},
and \eqn{\boldsymbol{\Psi}} are model parameters.
\eqn{\boldsymbol{\eta}_{t}} is a vector of latent variables
at time \eqn{t}, \eqn{\boldsymbol{\eta}_{t - 1}}
is a vector of latent variables at
\eqn{t - 1},
and \eqn{\boldsymbol{\zeta}_{t}} is a vector of dynamic noise
at time \eqn{t} while \eqn{\boldsymbol{\alpha}}
is a vector of intercepts,
\eqn{\boldsymbol{\beta}} is a matrix of autoregression
and cross regression coefficients,
and \eqn{\boldsymbol{\Psi}} is the covariance matrix of
\eqn{\boldsymbol{\zeta}_{t}}.
}
\examples{
data <- dat_univ_p1[, "y", drop = FALSE]
kalman <- KFilterP1(
  data = data,
  Lambda = matrix(1),
  mu0 = matrix(0),
  Sigma0 = matrix(1),
  beta = matrix(0.8),
  chol_psi = matrix(1),
  chol_theta = matrix(1)
)
str(kalman)

data <- dat_multiv_p1[, c("y1", "y2"), drop = FALSE]
kalman <- KFilterP1(
  data = data,
  Lambda = diag(2),
  mu0 = matrix(data = 0, nrow = 2),
  Sigma0 = diag(2),
  beta = diag(x = 0.8, nrow = 2, ncol = 2),
  chol_psi = chol(diag(2)),
  chol_theta = chol(diag(2))
)
str(kalman)

}
\author{
Ivan Jacob Agaloos Pesigan
}
\concept{Kalman Filter for State Space Models Functions}
\keyword{kalman}
\keyword{kalmanSSM}
