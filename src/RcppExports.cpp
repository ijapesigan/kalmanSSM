// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// KFilterP1
Rcpp::List KFilterP1(const arma::mat& data, const arma::mat& Lambda, const arma::mat& mu0, const arma::mat& Sigma0, const arma::mat& beta, const arma::mat& chol_psi, const arma::mat& chol_theta);
RcppExport SEXP _kalmanSSM_KFilterP1(SEXP dataSEXP, SEXP LambdaSEXP, SEXP mu0SEXP, SEXP Sigma0SEXP, SEXP betaSEXP, SEXP chol_psiSEXP, SEXP chol_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma0(Sigma0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chol_psi(chol_psiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type chol_theta(chol_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(KFilterP1(data, Lambda, mu0, Sigma0, beta, chol_psi, chol_theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kalmanSSM_KFilterP1", (DL_FUNC) &_kalmanSSM_KFilterP1, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_kalmanSSM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
